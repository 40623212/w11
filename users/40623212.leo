<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="yen.20170108171605.1"><vh>@settings</vh>
<v t="yen.20170108171605.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="yen.20170108171605.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="yen.20170108171622.1"><vh>有關 2017fall CADP &amp; CP</vh></v>
<v t="yen.20170108171733.1" a="E"><vh>@path ../</vh>
<v t="yen.20170108171733.2"><vh>@button pelican-blog</vh></v>
<v t="yen.20170108171733.3"><vh>@edit README.md</vh></v>
<v t="yen.20170108171733.4"><vh>@edit .gitignore</vh></v>
<v t="yen.20170108171733.5" a="E"><vh>Pelican 設定</vh>
<v t="yen.20170108171733.6"><vh>@edit local_publishconf.py</vh></v>
<v t="yen.20170108171733.7"><vh>@edit pelicanconf.py</vh></v>
</v>
<v t="yen.20170224232341.1" a="E"><vh>編輯 template</vh>
<v t="yen.20170224232341.2" a="E"><vh>@path theme/pelican-bootstrap3_local/templates</vh>
<v t="yen.20170224232341.3"><vh>@edit base.html</vh></v>
</v>
</v>
<v t="yen.20170108171733.8" a="E"><vh>@clean index.html</vh>
<v t="yen.20170108171733.9" a="E"><vh>html</vh>
<v t="yen.20170108171733.10"><vh>head</vh></v>
<v t="yen.20170108171733.11" a="E"><vh>body</vh>
<v t="yen.20170108171733.12" a="E"><vh>reveal div</vh>
<v t="yen.20170108171733.13" a="E"><vh>slides div</vh>
<v t="yen.20170108171733.14" a="E"><vh>封面投影片</vh>
<v t="yen.20170108171733.15"><vh>封面投影片內容</vh></v>
</v>
<v t="leo.20171113150540.1" a="E"><vh>內容</vh>
<v t="leo.20171113150540.2"><vh>W1~W3</vh></v>
</v>
<v t="leo.20171113150504.1" a="E"><vh>內容</vh>
<v t="leo.20171113150504.2"><vh>W4~W6</vh></v>
</v>
<v t="leo.20171113150453.1" a="E"><vh>內容</vh>
<v t="leo.20171113150453.2"><vh>W7~W9</vh></v>
</v>
<v t="yen.20170108171733.16" a="E"><vh>內容</vh>
<v t="yen.20170108171733.17"><vh>心得</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="yen.20170108171733.71" a="E"><vh>@path content</vh>
<v t="leo.20171106134158.1"><vh>@clean 20170911.md</vh></v>
<v t="leo.20171106111757.1"><vh>@clean 20170918.md</vh></v>
<v t="leo.20171106134200.1"><vh>@clean 20170925.md</vh></v>
<v t="leo.20171106134202.1"><vh>@clean 20171001.md</vh></v>
<v t="leo.20171106134204.1"><vh>@clean 20171016.md</vh></v>
<v t="leo.20171106134203.1"><vh>@clean 20171023.md</vh></v>
<v t="leo.20171106134208.1"><vh>@clean 20171030.md</vh></v>
<v t="leo.20171116165956.1"><vh>@clean 20171106.md</vh></v>
<v t="leo.20171116172048.1"><vh>@clean 20171113.md</vh></v>
<v t="yen.20170108171733.81" a="E"><vh>@path pages</vh>
<v t="yen.20170108171733.82"><vh>@edit pages_1.md</vh></v>
</v>
</v>
<v t="yen.20170108171733.83"><vh>產生 .key 與 .crt</vh></v>
</v>
<v t="yen.20170108171930.1"><vh>@button https server</vh></v>
<v t="yen.20170108171939.1"><vh>@button ipv6 https server</vh></v>
</vnodes>
<tnodes>
<t tx="leo.20171106111757.1">@language md
Title: 2017 Fall CP 第二週
Date: 2017-09-18 13:20
Category: Course
Tags: 2017fall, CADP
Slug: 40623212_2017-fall-cadp-w2
Author: 40623212

本學期起各班透過一台 Ubuntu 16.04 主機, 建立 Fossil SCM 伺服器, 且每一學員發放一個 Fossil SCM 倉儲, 其中各學員可以利用 Wiki 與 Technote 紀錄學習資料外, 還可以將靜態網誌與簡報檔案放入 Files 資料區.

&lt;!-- PELICAN_END_SUMMARY --&gt;

測試沒有綁定帳號後, 指定帳號新增提交推送版本.

測試 commit 時沒有 --user-override  4062

測試 push 才綁帳號

configuration - 組成內容與狀態

scm - software configuration management

batch - 批次

remark - 註解

default - 內定, 默認

fossil clone  - 克隆

fossil add  - 新增

fossil commit - 提交

fossil push - 推送

fossil remote-url off

fossil ui - user interface

url - uniform resource locator 

https - secure hypertext transfer protocol

protocol - 協定

certification - 簽章 - public key server

certify - 認證

vacuum - 吸塵

fossil clone https://mde1a1.kmol.info/pymcadp pymcadp.fossil

IDE - Integrated Development Environment

希望為每位學員建立倉儲的設想流程如下:

1. 各學員可以獨立維護倉儲內容, 也可以在總管理員的權限下, 為分組學員建立帳號, 逐步導入協同設計
2. 各學員的倉儲以修課班級命名伺服器, 以學號命名倉儲, 方便依照此一規律擷取各學員的倉儲頁面.
3. 各學員能以電子郵件收到與新建倉儲相關的連結, 以及帳號密碼.
4. 必須擴增 Ubuntu ulimits -n 同時開檔的設限範圍 (內定只允許同時開啟 1024 個檔案)

解決方案:

1. 主機名稱可以透過 domain dns 中的 CNAME 別名方式處理, 因為目前所能提供出來的 IPv4/IPv6 雙支援主機, 之前已經都設定了符號名稱.
2. fossil init 雖然提供指定管理者的 -A 選項功能, 但是無法直接指定管理者對應密碼, 因此必須建立倉儲之後, 再利用 fossil user 修改密碼, 之後再利用 Gmail 寄出通知信, 其中提供倉儲連結, 登入帳號與密碼等資訊.

建立各學員倉儲檔案的程式如下, 如前所述, 主要透過兩個 Fossil SCM 指令完成, 在 Windows 採用 Fossil SCM 2.3 版建立所有 .fossil 倉儲時, 將同時以 email 通知各學員. 各學員的 .fossil 檔案再以 sftp 送到伺服主機對應帳號所屬的目錄下. 必須要特別注意的是, 採用 Fossil SCM 2.3 版所建立的 .fossil 倉儲檔案, 在 Ubuntu 操作系統上也必須採用相同版本的 fossil, 否則舊版 fossil 可能無法開啟新版 fossil 程式所建立的倉儲檔.

&lt;pre class="brush: python"&gt;
import os
import string
import random
# 使用 Gmail 寄信必須導入下列模組
import smtplib
import re
from email.mime.text import MIMEText  
from email.header import Header

# 用來以亂數建立密碼的韓式
def id_generator(size=6, chars=string.ascii_uppercase + string.digits):
    '''
    source: https://stackoverflow.com/questions/2257441/random-string-generation-with-upper-case-letters-and-digits-in-python
    '''
    return ''.join(random.choice(chars) for _ in range(size))

# 讀取學員名單, 逐一取得學員學號, 學員名單, 檢查點 1/7
student_data = open("2017fall_list/1b.txt").read()
student_list = student_data.splitlines()

# 利用 gmail smtp 功能寄信
server = smtplib.SMTP('smtp.gmail.com:587')
server.ehlo()
server.starttls()
# 以下必須準備好對應郵件帳號與密碼的外部檔案, 所提供的寄信帳號, 是否可以寄信, 檢查點 2/7
'''
寄信之前必須到 https://www.google.com/settings/security/lesssecureapps 修改權限, 改為較低安全權限
否則無法使用程式寄信!
'''
# 從外部檔案讀取要用來寄信的 gmail 帳號與密碼
# mail.txt 格式為: 電子郵箱,對應密碼, 以逗點隔開, 檢查點 3/7
email_data = open("z:/2017fall/mail.txt").read()
email, email_password= email_data.split(",")
print(email, email_password)
# 是否登入所提供寄信的電子郵箱, 4/7
server.login(email, email_password)
# 不同課程名稱, 與對應主機名稱, 必須配合修改 5/7
course_title = "計算機程式"
fossil_server = "cpb.kmol.info"

for student_num in student_list:
    username = student_num
    repository = username + '.fossil'
    # 利用所提供的字串, 以亂數組成六個字元的密碼
    password = id_generator(6, "23456789abcdef")
    print(student_num, ", " , password)

    # 執行 dos command 指令, 建立倉儲
    os.system("fossil init -A " +username + " " + repository)
    print("已經建立倉儲 " + repository)

    # 執行 dos command 指令, 修改使用者密碼
    os.system("fossil user password " + username + " " + password + " -R " + repository)
    print("已經修改密碼")
    
    # 利用 Gmail 寄信, 告知各學員倉儲連結與帳號密碼
    # 每一位學員收到的 output 都從這裡 reset
    output = ""
    # 若學號欄為空, 則不寄信
    if student_num != "":
        # output 為寄給每一位學員的資料表格
        mail_content = student_num+' 您好: &lt;br /&gt;&lt;br /&gt; 您在 '+course_title+' 課程中的區域網路倉儲: &lt;a href="https://'+fossil_server+'/'+student_num+'"&gt;https://'+fossil_server+'/'+student_num+'&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;'
        mail_content += '管理帳號為:'+ student_num + '&lt;br /&gt; 管理密碼為: '+ password+'&lt;br /&gt;&lt;br /&gt;'
        print(student_num)
        print(mail_content)
        # 至此 mail_content 已經確定
        # 在測試與實際寄送資料, 也必須配合修改, 檢查點  6/7
        receiver_email = student_num + "@gm.nfu.edu.tw"
        # 測試用
        #receiver_email = student_num+"@mde.tw"
        # 列出收信人 email 位址
        #print(receiver_email)
        #message= MIMEText(mail_content,'plain','UTF-8')
        # 以 html 格式寄信
        message= MIMEText(mail_content,'html','UTF-8')
        message['Subject'] = Header(course_title+" Fossil SCM 帳號通知", 'UTF-8') 
        # 可以先不寄信, 確定格式正確後再開啟, 是否實際寄出信件, 檢查點 7/7
        server.sendmail("gmail_address", receiver_email, message.as_string())
server.quit()
&lt;/pre&gt;

各班所完成的主機:

二甲電腦輔助設計實習: &lt;a href="https://cadpa.kmol.info"&gt;https://cadpa.kmol.info&lt;/a&gt;

二乙電腦輔助設計實習: &lt;a href="https://cadpb.kmol.info"&gt;https://cadpb.kmol.info&lt;/a&gt;

一甲計算機程式: &lt;a href="https://cpa.kmol.info"&gt;https://cpa.kmol.info&lt;/a&gt;

一乙計算機程式: &lt;a href="https://cpb.kmol.info"&gt;https://cpb.kmol.info&lt;/a&gt;</t>
<t tx="leo.20171106134158.1">@language md
Title: 2017 Fall CP 第一週
Date: 2017-09-11 13:20
Category: Course
Tags: 2017fall, CADP
Slug: 40623212_2017-fall-cadp-w1
Author: 40623212

W1

&lt;!-- PELICAN_END_SUMMARY --&gt;

###課程摘要
機械設計包含固體、流體、軟體、註解 其中以軟體最為重要
表達有六種形式, 包括口語、文字、2D、3D、數學(量化)與實體表達
創造力的三種必備能力: 自學能力、執行能力與想像能力
程式分為 程:流程  式:正確格式

###課程單字
interpreter:解譯

SCM:軟體配置管理

S:software 軟體

C:configuration 組態

M:management 管理

###心得
在第一天裡 我學習到 機械設計並不只是單一上的設計 還要學會表達 再用數學 實體等 說明得更清楚 使他人無法辯解</t>
<t tx="leo.20171106134200.1">@language md
Title: 2017 Fall CP 第三週
Date: 2017-09-11 13:20
Category: Course
Tags: 2017fall, CADP
Slug: 40623212_2017-fall-cadp-w3
Author: 40623212

W3

&lt;!-- PELICAN_END_SUMMARY --&gt;

###課程摘要
使用fossil clone 克隆老師的4062 更新自己的網誌

###課程單字
.所在目錄

..上個目錄

fossil clone 克隆

fossil open 打開壓縮檔案

mkdir (資料夾名稱) 建立以此命名的資料夾

fossil add .增加全部

fossil commit -m " "提交

課程單字:

configuration 組態

remark 說明

remark batch 批次

default 默認

protocol 協定

cerification 簽章

certify 認證

vacuuming 吸塵

IDE:整合開發環境

I:integrated

D:development

E:environment

###心得
學會如何使用他人的網址來更改自己的網誌</t>
<t tx="leo.20171106134202.1">@language md
Title: 2017 Fall CP 第四週
Date: 2017-10-01 13:20
Category: Course
Tags: 2017fall, CADP
Slug: 40623212_2017-fall-cadp-w4
Author: 40623212

W4

&lt;!-- PELICAN_END_SUMMARY --&gt;

###課程內容
示範如何使用fossil delete在fossil系統中刪除不要的檔案
###指令
fossil status 狀態

fossil delete 刪除
####課程單字
analog:類比

digital:數位

sampling:取樣

animation:動畫

###心得
學習到如何刪除在網誌上不需要的內容 和狀態檢查 使我們能確定將網誌更新與維護</t>
<t tx="leo.20171106134203.1">@language md
Title: 2017 Fall CP 第七週學習心得
Date: 2017-10-23 13:20
Category: Course
Tags: 2017fall, CP, W7, Exam
Slug: 40623212_2017-fall-cp-w7-exam
Author: 40623212

W7 Exam

&lt;!-- PELICAN_END_SUMMARY --&gt;


###操作影片
&lt;iframe width="854" height="480" src="https://www.youtube.com/embed/K6TC37JIWkQ" frameborder="0" gesture="media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe src="https://player.vimeo.com/video/240351336" width="640" height="376" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="https://vimeo.com/240351336"&gt;國立虎尾科技大學-機械設計工程系-計算機程式-40623212&lt;/a&gt; from &lt;a href="https://vimeo.com/user73453646"&gt;魏有泉&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
###學習心得
在課程中學習到如果在做任何軟體時,如果沒有備份的檔案,
事後再修改此軟體,就會造成修改前的檔案遺失,使自己吃虧,
及使用隨身系統維護個人網誌讓自己的檔案更不容易遺失,
這些在出社會後是不會有人教的,但在這堂課計算機程式中,
卻學習到這些,使我受益良多。
###自評成績
每週出席情況 100

紙本筆記 65

隨身碟內容 80

個人倉儲內容 75

各週上課摘要 70

自評分數 72</t>
<t tx="leo.20171106134204.1">@language md
Title: 2017 Fall CP 第六週
Date: 2017-10-16 13:20
Category: Course
Tags: 2017fall, CADP
Slug: 40623212_2017-fall-cadp-w6
Author: 40623212

W6

&lt;!-- PELICAN_END_SUMMARY --&gt;

###課程內容
複習前四次上課的內容
修改個人倉儲的密碼和使用台灣台北標準時間
用fossil clone 克隆4062 再次確認自己的網誌是否達成老師所說的要求
for 迴圈用法
for i in range():
    print(i)

###心得
雖然說是複習 但是能將自己網誌上的東西更一次確認是否完備</t>
<t tx="leo.20171106134208.1">@language md
Title: 2017 Fall CP 第八週學習心得
Date: 2017-10-30 13:20
Category: Course
Tags: 2017fall, CP, W8, Exam
Slug: 40623212_2017-fall-cp-w8-exam
Author: 40623212

W8 Exam

&lt;!-- PELICAN_END_SUMMARY --&gt;



###操作影片
&lt;iframe src="https://player.vimeo.com/video/241380925" width="640" height="471" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/241380925"&gt;國立虎尾科技大學-機械設計工程系-計算機程式-40623212-w8&lt;/a&gt; from &lt;a href="https://vimeo.com/user73453646"&gt;魏有泉&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;iframe width="854" height="480" src="https://www.youtube.com/embed/s2TC0uo32PE" frameborder="0" gesture="media" allowfullscreen&gt;&lt;/iframe&gt;
###學習心得
在這周學習到如何使用for迴圈用法 嘗試弄出老師所規劃的問題 一個菱形的圖案 並且知道Python的縮排規定 了解到大小寫的功用有被區分開來 再來了解使用eric6後 建立了計算機部分的表框以及結構出來</t>
<t tx="leo.20171113150453.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171113150453.2">###W7~W9
7~9週為期中驗收週
第7週驗收為增設第7週的網誌 錄製影片上傳(內容為:從打開隨身系統開始到將第7週網誌上傳完成)
第8週驗收為拍攝影片 影片過程中需要使用到for迴圈程式應用及使用eric6建立計算機的介面
第9週為使用線上投影片報告1~8周所學到的知識，並且錄製有聲音表達的影片
</t>
<t tx="leo.20171113150504.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171113150504.2">###W4~W6
4~6週為專案執行週
使用SciTE打開Leo，在學習如何新增、編輯網誌，跑完近端推送遠端後，使用隨身系統fossil add .與fossil -m "提交檔案的批次名稱"推上自己的倉儲
了解如何for迴圈用法 產生相對應的字串
學習如何使用shareX錄製影片
利用eric6新建專案，拉出功能做出計算機的架構</t>
<t tx="leo.20171113150540.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171113150540.2">###W1~W3
1~3週為導入週
了解何謂機械設計:機械設計本質為六種表達與如何培養創造力
了解上課須備的物品 隨身碟 筆記本 耳機
說明倉儲系統與個人隨身系統
將倉儲的密碼更改、內定的標準時間更改為台灣時間、以及使用wiki更改倉儲主頁內容
如何開啟隨身系統:打開python2017fall_36目錄中的start.bat開啟
clone 4052的倉儲 再利用fossil add .(新增) 和fossil commit -m "提交檔案的批次名稱"(提交) 推送到自己的倉儲</t>
<t tx="leo.20171116165956.1">@language md
Title: 2017 Fall CP 第九週學習心得
Date: 2017-11-06 13:20
Category: Course
Tags: 2017fall, CP, W9, Exam
Slug: 40623212_2017-fall-cp-w9-exam
Author: 40623212

W9 Exam

&lt;!-- PELICAN_END_SUMMARY --&gt;



###操作影片
&lt;iframe width="854" height="480" src="https://www.youtube.com/embed/7f0CFpLqdvE" frameborder="0" gesture="media" allowfullscreen&gt;&lt;/iframe&gt;

###學習心得
這週我們使用了網路投影片進行了1~8週的課程報告，其中不只讓我更加了解1~8週的學習歷程與從老師那學習到的東西。更讓我了解到我們並不是只在這堂課裡記錄學習歷程，而是要在無時無刻的學習下，一點一滴的紀錄自己所學的知識。</t>
<t tx="leo.20171116172048.1">@language md
Title: 2017 Fall CP 第十週
Date: 2017-11-13 13:20
Category: Course
Tags: 2017fall, CADP
Slug: 40623212_2017-fall-cadp-w10
Author: 40623212

W10

&lt;!-- PELICAN_END_SUMMARY --&gt;

###課程內容
更改近端開啟系統內的設定 使其打開進端系統時可以同時開啟自己的leo 和使用eric6建立將來要製作的計算機版面 以及下載可攜軟體。
###心得
了解到老師所謂的客製化是如此便利於使用者可以自行更改利於自己的需求且在檢討週內 確認自己是否跟上老師的進度。</t>
<t tx="yen.20170108171605.1"></t>
<t tx="yen.20170108171605.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="yen.20170108171605.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="yen.20170108171622.1">2017 Fall 機械設計工程系 CADP &amp; CP

倉儲位置: https://mde1a1.kmol.info/2017fall

每一協同成員都應該要在 users 目錄下有一個 Leo 檔案

</t>
<t tx="yen.20170108171733.1"></t>
<t tx="yen.20170108171733.10">&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
&lt;title&gt;
2017 Spring 機械設計工程系網際內容管理
&lt;/title&gt;
    &lt;meta name="description" content="A framework for easily creating beautiful presentations using HTML"&gt;
    &lt;meta name="author" content="Hakim El Hattab"&gt;
    
    &lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
    &lt;meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"&gt;
    
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt;
    
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/reveal.css"&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/theme/black.css" id="theme"&gt;
    
    &lt;!-- Theme used for syntax highlighting of code --&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/lib/css/zenburn.css"&gt;

    &lt;!-- Printing and PDF exports --&gt;
    &lt;script&gt;
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match( /print-pdf/gi ) ? 'https://cad-lab.github.io/cadlab_data/reveal/css/print/pdf.css' : 'https://cad-lab.github.io/cadlab_data/reveal/css/print/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    &lt;/script&gt;

    &lt;!--[if lt IE 9]&gt;
    &lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/html5shiv.js"&gt;&lt;/script&gt;
    &lt;![endif]--&gt;
&lt;/head&gt;

</t>
<t tx="yen.20170108171733.11">&lt;body&gt;
@others
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/js/reveal.js"&gt;&lt;/script&gt;
&lt;script&gt;
        // More info https://github.com/hakimel/reveal.js#configuration
        Reveal.initialize({
            controls: true,
            progress: true,
            history: true,
            center: true,

            transition: 'slide', // none/fade/slide/convex/concave/zoom

            // More info https://github.com/hakimel/reveal.js#dependencies
            dependencies: [
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/lib/js/classList.js', condition: function() { return !document.body.classList; } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/zoom-js/zoom.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/notes/notes.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/math/math.js', async: true }
            ]
        });
&lt;/script&gt;
&lt;/body&gt;
</t>
<t tx="yen.20170108171733.12">&lt;div class="reveal"&gt;
@others
&lt;/div&gt;

</t>
<t tx="yen.20170108171733.13">&lt;!-- Any section element inside of this container is displayed as a slide --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;

</t>
<t tx="yen.20170108171733.14">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="yen.20170108171733.15">## 2017Fall CADP 與 CP

### 虎科大機械設計工程系

&lt;small&gt;
Created by [KMOLab](http://kmolab.github.io/blog/)
&lt;/small&gt;
###40623212 魏有泉
[CADP 與 CP 課程網誌](blog/index.html)


</t>
<t tx="yen.20170108171733.16">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="yen.20170108171733.17">###心得
在課堂中第一次接觸到Fossil程式 隨身系統與使用leo維護網誌及利用eric6寫出計算機的程式。雖然起初不容易，但我對寫程式的熱忱不會改變，因為從小就看過別人寫程式，但當時還不懂其中的邏輯。但是現在有這門課計算機程式，使我對計算機的程式有更大的了解!</t>
<t tx="yen.20170108171733.2">@language python
import os
#os.system("pelican content -o output -s local_publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o blog -s local_publishconf.py")
g.es("admin pelican 近端執行完畢")


</t>
<t tx="yen.20170108171733.5"></t>
<t tx="yen.20170108171733.71"></t>
<t tx="yen.20170108171733.8">@language xml
@tabwidth -4
@others

</t>
<t tx="yen.20170108171733.81"></t>
<t tx="yen.20170108171733.83">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout localhost.key -out localhost.crt

</t>
<t tx="yen.20170108171733.9">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
@others
&lt;/html&gt;
</t>
<t tx="yen.20170108171930.1">@language python
import os
import subprocess
import threading
import http.server, ssl

def domake():
    # build directory
    os.chdir("./../")
    server_address = ('localhost', 5443)
    httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print(os.getcwd())
    print("5443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170108171939.1">@language python
import os
import subprocess
import threading
import socket
import http.server, ssl

class HTTPServerV6(http.server.HTTPServer):
    address_family = socket.AF_INET6
  
def domake():
    # build directory
    os.chdir("./../")
    ipv6_address = '2001:288:6004:17:3004::808'
    server_address = (ipv6_address, 6443)
    #httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd = HTTPServerV6(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("6443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170224232341.1"></t>
<t tx="yen.20170224232341.2"></t>
</tnodes>
</leo_file>
